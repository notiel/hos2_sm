#include "health.h"
#include "eventHandlers.h"
#include "player_type.h"
#include <stdio.h>
#include "qhsm.h"

//stub function
void Flash(unsigned int R, unsigned int G, unsigned int B, unsigned int Timeout) {
    printf("Flash color %i %i %i for %i ms\n", R, G, B, Timeout); 
}

//stub function, autogenerated
void Vibro(unsigned int Timeout) {
     printf("Vibro for %i ms\n", Timeout);
}

//stub function
void State_Save(unsigned int State) {
	printf("State saved\n");
 }

//stub function
void HP_Save(unsigned int HP) {
	printf("HP %i saved\n", HP);
}

//stub function
void MaxHP_Save(unsigned int MaxHP) {
	printf("HP %i saved\n", MaxHP);
 
}

//stub function
void DangerTime_Save(unsigned int Time) {
	printf("DT saved %i \n", Time);
}

//stub function
void ChargeTime_Save(unsigned int Time) {
	printf("DT saved %i \n", Time);
}


//stub function
void Ability_Save(unsigned int Ability) {
    printf("Ability saved\n"); 
}

//stub function
void PlayerType_Save(unsigned int Type) {
    printf("Type saved\n"); 
}

//stub function, autogenerated
void SendShining() {
    printf("Shining sent\n"); 
}


void Player_Died(Health* me) {
    State_Save(DEAD);
    HP_Update(me, 0);
    Vibro(DEATH_TO_S*1000/3);
    Flash(255, 0, 0, DEATH_TO_S*1000);
    SIMPLE_DISPATCH(the_ability, DISABLE);
    SIMPLE_DISPATCH(the_player_type, DIE);
}

void ShowHP(Health* me) {
    Flash(255 - (me->CharHP)*255/me->MaxHP, (me->CharHP*255)/me->MaxHP, 0, FLASH_MS/3);
}

void DangerTime_Update(Health* me, unsigned int Time) {
    me->DangerTime = Time;
    DangerTime_Save(Time);
}


void HP_Update(Health* me, int HP) {
    if (HP < me->CharHP) {
        IndicateDamage(me);
    }
    if  (HP <= me->MaxHP) {
        if(HP > 0) {
             me->CharHP = HP;
        } else {
             me->CharHP = 1;
        }
    } else {
         me->CharHP = me->MaxHP;
    }
    HP_Save(HP);   
}

void Reset(Health* me) {
    HP_Update(me, me->MaxHP);
    DangerTime_Update(me, 0);
}

void MaxHP_Update(Health* me, unsigned int MaxHP) {
    me->MaxHP = MaxHP;
    MaxHP_Save(MaxHP);	
}

void IndicateDamage(Health* me) {
    ShowHP(me);
    Vibro(VIBRO_MS);
} 

void ChargeTime_Update(Ability *me, unsigned int Time) {
	me->ChargeTime = Time;
	ChargeTime_Save(Time);
}

